#include<bits/stdc++.h>
using namespace std;

namespace TYC
{
	const int N=2010,M=N*(N-1),inf=0x3f3f3f3f;
	int n,m,G[N][N],tag[M],dis[N],cnt[N],vis[N];

	void spfa(int s,int t)
	{
		memset(dis,inf,sizeof(dis));
		queue<int> q;
		dis[s]=0,cnt[s]=1,vis[s]=1;
		q.push(s);
		while(!q.empty())
		{
			int u=q.front();
			q.pop();
			vis[u]=0;
			if(u==t) return;
			for(int v=1;v<=n;v++)
			{
				if(dis[v]==dis[u]+G[u][v]) 
					cnt[v]+=cnt[u];
				if(dis[v]>dis[u]+G[u][v])
					dis[v]=dis[u]+G[u][v],cnt[v]=cnt[u];
				if(cnt[v]&&!vis[v]) vis[v]=1,q.push(v);
			}
			cnt[u]=0;//因为还要进队,应将cnt[u]清零
		}
	}

	void work()
	{
		scanf("%d%d",&n,&m);
		memset(G,inf,sizeof(G));
		int u,v,w;
		for(int i=1;i<=m;i++)
		{
			scanf("%d%d%d",&u,&v,&w);
			G[u][v]=min(G[u][v],w);
		}
		spfa(1,n);
		if(dis[n]==inf) puts("No answer");
		else printf("%d %d\n",dis[n],cnt[n]);
	}
}

int main()
{
	TYC::work();
	return 0;
}
